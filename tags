!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
LED_BLUE_PORTA_BIT	Sources/led.h	8;"	d
LED_GREEN_PORTA_BIT	Sources/led.h	7;"	d
LED_ORANGE_PORTA_BIT	Sources/led.h	5;"	d
LED_YELLOW_PORTA_BIT	Sources/led.h	6;"	d
NUM_OF_LEDS	Sources/led.h	3;"	d
PORT_PCR_MUX_ANALOG	Sources/led.h	11;"	d
PORT_PCR_MUX_GPIO	Sources/led.h	14;"	d
SVCArtichoke	Sources/svc.c	/^int __attribute__((naked)) __attribute__((noinline)) SVCArtichoke(int arg0, int arg1, int arg2, int arg3) {$/;"	f
SVCArtichoke	Sources/svc.c	/^int __attribute__((never_inline)) SVCArtichoke(int arg0, int arg1, int arg2, int arg3) {$/;"	f
SVCArtichokeImpl	Sources/svc.c	/^int SVCArtichokeImpl(int arg0, int arg1, int arg2, int arg3) {$/;"	f
SVCBroccoliRabe	Sources/svc.c	/^void __attribute__((naked)) __attribute__((noinline)) SVCBroccoliRabe(int arg0) {$/;"	f
SVCBroccoliRabe	Sources/svc.c	/^void __attribute__((never_inline)) SVCBroccoliRabe(int arg0) {$/;"	f
SVCEndive	Sources/svc.c	/^void __attribute__((naked)) __attribute__((noinline)) SVCEndive(void) {$/;"	f
SVCEndive	Sources/svc.c	/^void __attribute__((never_inline)) SVCEndive(void) {$/;"	f
SVCJicama	Sources/svc.c	/^int __attribute__((naked)) __attribute__((noinline)) SVCJicama(int arg0) {$/;"	f
SVCJicama	Sources/svc.c	/^int __attribute__((never_inline)) SVCJicama(int arg0) {$/;"	f
SVCLedInit	Sources/svc.c	/^void __attribute__((naked)) __attribute__((noinline)) SVCLedInit(int arg0) {$/;"	f
SVCLedInit	Sources/svc.c	/^void __attribute__((never_inline)) SVCLedInit(int arg0) {$/;"	f
SVCLedWrite	Sources/svc.c	/^void __attribute__((naked)) __attribute__((noinline)) SVCLedWrite(int argo, int arg1) {$/;"	f
SVCLedWrite	Sources/svc.c	/^void __attribute__((never_inline)) SVCLedWrite(int arg0, int arg1) {$/;"	f
SVC_ARTICHOKE	Sources/svc.h	23;"	d
SVC_BROCCOLIRABE	Sources/svc.h	21;"	d
SVC_ENDIVE	Sources/svc.h	20;"	d
SVC_JICAMA	Sources/svc.h	22;"	d
SVC_LED_INIT	Sources/svc.h	24;"	d
SVC_LED_WRITE	Sources/svc.h	25;"	d
SVC_MaxPriority	Sources/svc.h	15;"	d
SVC_PriorityShift	Sources/svc.h	16;"	d
XPSR_FRAME_ALIGNED_BIT	Sources/svc.c	71;"	d	file:
XPSR_FRAME_ALIGNED_MASK	Sources/svc.c	72;"	d	file:
_DELAY_H	Sources/delay.h	13;"	d
_LED_H	Sources/led.h	2;"	d
_SVC_H	Sources/svc.h	13;"	d
_led_t	Sources/led.h	/^typedef struct _led_t {$/;"	s
arg0	Sources/svc.c	/^		int arg0;$/;"	m	union:frame::__anon1	file:
arg1	Sources/svc.c	/^		int arg1;$/;"	m	union:frame::__anon2	file:
arg2	Sources/svc.c	/^		int arg2;$/;"	m	union:frame::__anon3	file:
arg3	Sources/svc.c	/^		int arg3;$/;"	m	union:frame::__anon4	file:
delay	Sources/delay.c	/^void delay(unsigned long int limit) {$/;"	f
frame	Sources/svc.c	/^struct frame {$/;"	s	file:
init	Sources/led.h	/^    void (*init)(void); $/;"	m	struct:_led_t
ledBlueConfig	Sources/led.c	/^void ledBlueConfig(void) {$/;"	f
ledBlueOff	Sources/led.c	/^void ledBlueOff(void) {$/;"	f
ledBlueOn	Sources/led.c	/^void ledBlueOn(void) {$/;"	f
ledBlueWrite	Sources/led.c	/^void ledBlueWrite(int ch){$/;"	f
ledGreenConfig	Sources/led.c	/^void ledGreenConfig(void) {$/;"	f
ledGreenOff	Sources/led.c	/^void ledGreenOff(void) {$/;"	f
ledGreenOn	Sources/led.c	/^void ledGreenOn(void) {$/;"	f
ledGreenWrite	Sources/led.c	/^void ledGreenWrite(int ch){$/;"	f
ledInit	Sources/led.c	/^void ledInit(){ $/;"	f
ledOrangeConfig	Sources/led.c	/^void ledOrangeConfig(void) {$/;"	f
ledOrangeOff	Sources/led.c	/^void ledOrangeOff(void) {$/;"	f
ledOrangeOn	Sources/led.c	/^void ledOrangeOn(void) {$/;"	f
ledOrangeWrite	Sources/led.c	/^void ledOrangeWrite(int ch){$/;"	f
ledYellowConfig	Sources/led.c	/^void ledYellowConfig(void) {$/;"	f
ledYellowOff	Sources/led.c	/^void ledYellowOff(void) {$/;"	f
ledYellowOn	Sources/led.c	/^void ledYellowOn(void) {$/;"	f
ledYellowWrite	Sources/led.c	/^void ledYellowWrite(int ch){$/;"	f
led_t	Sources/led.h	/^} led_t;$/;"	t	typeref:struct:_led_t
ledinit	Sources/led.c	/^int ledinit(void * minor_num){ $/;"	f
leds	Sources/led.c	/^led_t leds[NUM_OF_LEDS] = { $/;"	v
ledwrite	Sources/led.c	/^int ledwrite(int ch, void *minor_num){ $/;"	f
lr	Sources/svc.c	/^		int lr;$/;"	m	union:frame::__anon5	file:
main	Sources/main.c	/^int main(void) {$/;"	f
r0	Sources/svc.c	/^		int r0;$/;"	m	union:frame::__anon1	file:
r1	Sources/svc.c	/^		int r1;$/;"	m	union:frame::__anon2	file:
r12	Sources/svc.c	/^	int r12;$/;"	m	struct:frame	file:
r14	Sources/svc.c	/^		int r14;$/;"	m	union:frame::__anon5	file:
r2	Sources/svc.c	/^		int r2;$/;"	m	union:frame::__anon3	file:
r3	Sources/svc.c	/^		int r3;$/;"	m	union:frame::__anon4	file:
returnAddr	Sources/svc.c	/^	int returnAddr;$/;"	m	struct:frame	file:
returnVal	Sources/svc.c	/^		int returnVal;$/;"	m	union:frame::__anon1	file:
svcHandlerInC	Sources/svc.c	/^void svcHandlerInC(struct frame *framePtr) {$/;"	f
svcInit_SetSVCPriority	Sources/svc.c	/^void svcInit_SetSVCPriority(unsigned char priority) {$/;"	f
write	Sources/led.h	/^    void (*write)(int ch); $/;"	m	struct:_led_t
xPSR	Sources/svc.c	/^	int xPSR;$/;"	m	struct:frame	file:
